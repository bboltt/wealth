**Prospecting Private Wealth Management Clients**

### 1. Summary
The **Prospecting Private Wealth Management (PWM) Clients** system is a machine learning-driven approach aimed at identifying high-potential prospects for PWM services. The system employs clustering models to analyze patterns from existing PWM clients and applies these insights to identify non-PWM clients with similar profiles who are likely to convert to PWM. By incorporating data-driven decision-making, this prospecting system enhances targeting strategies, providing wealth managers with a prioritized list of prospects likely to become PWM clients.

### 1.1 Product Use, Purpose, and Scope
Here’s the detailed section 1.1 for the **Prospecting PWM Clients System**:

### 1.1 Product Use, Purpose, and Scope

The **Prospecting PWM Clients System** is designed as a data-driven tool for identifying potential clients who are likely to convert to Private Wealth Management (PWM) clients. The system leverages machine learning models to analyze and segment existing PWM clients and prospects based on multiple data points, creating insights for business teams and wealth advisors. 

The primary purpose of this system is to streamline the prospecting process by pinpointing consumers who demonstrate similarities to existing high-net-worth or affluent PWM clients. By analyzing consumer behavior, product usage, and financial patterns, the system uncovers high-potential clients for targeted outreach, allowing wealth management teams to focus their efforts on clients most likely to convert.

The **Prospecting PWM Clients System** acts as an integral part of the broader WealthClientIQ initiative, feeding insights and prioritized leads into the existing client management pipeline. Advisors can use these insights to guide conversations, better understand their client base, and make more informed decisions, ultimately leading to an increase in client conversion rates, improved client relationships, and enhanced product penetration.

Key outcomes include:
- Identification of high-potential PWM prospects using clustering analysis of existing PWM clients.
- Data-driven insights that facilitate more effective prospecting and advisory processes.
- Continuous updates and insights based on evolving data, improving the model over time.
  
The system covers all customer segments, ranging from affluent households to high-net-worth clients. It incorporates data from various sources, including customer profiles, financial transactions, and historical patterns, to provide wealth advisors with a focused list of prospects who resemble the characteristics of existing PWM clients. This approach allows for more precise targeting and ensures that outreach efforts are aligned with the actual needs and interests of potential PWM clients. 

In scope, the system generates monthly updates on high-potential prospects, highlighting the most relevant targets for further engagement. This improves efficiency and productivity for the wealth advisors by reducing manual prospecting efforts and supporting data-backed decision-making in client management.

### 1.2 Actions Taken Based on the Product Output
The tool provides wealth advisors with a ranked list of prospects, along with reason codes derived from cluster insights. These insights allow wealth managers to:
1. Prioritize their client outreach by focusing on clients who resemble current PWM clients.
2. Use data-driven insights to facilitate more informed client conversations.
3. Generate monthly prospecting lists, which are updated regularly to reflect changes in client behavior or profile.

### 1.3 Known Risks, Weaknesses, Limitations, and Gaps
Like any data-driven model, the **Prospecting PWM Clients** system has inherent risks and limitations:
- **Historical Data Bias:** The model is based on historical Regions Bank data, which may introduce biases towards certain client profiles.
- **Advisor Discretion:** While the model provides suggestions, it cannot replace the personal judgment and discretion of wealth advisors. It is a tool to assist, not to automate, client decision-making.
- **12-Month Data Requirement:** The model relies on at least 12 months of client data, potentially excluding clients with insufficient history.

### 1.4 Validation Rating & Supervisory Feedback (To be updated post-review)

### 1.5 Long-Term Plan
- **New Feature Exploration:** Continuously integrate new data points into the model, ensuring the clustering and prospecting processes are comprehensive.
- **Supplementary Models:** Introduce additional models for each product segment, enhancing overall targeting precision.
- **Post-Process Rules:** Implement business-specific rules to fine-tune model outputs based on wealth management requirements.
- **Business Feedback Loop:** Incorporate ongoing feedback from wealth advisors and leadership to ensure the model remains aligned with business needs.
- **Model Drift Monitoring:** Build a continuous monitoring system to ensure model performance over time.

### 2. Model Development

### 2.1 Data Sources
The model sources multiple data tables from Regions Bank's data lake. These sources are transformed into features to be used in the model pipeline. The table below lists key data sources:

| Source       | Data Tables                           | Description                                           |
|--------------|---------------------------------------|-------------------------------------------------------|
| PWM Client   | dm_r3.pwm_mstr_dtl, pwm_calculated_revenue | Data on PWM clients' balance, revenue, and products    |
| Consumer Data | dm_r3.consumer_summary              | Demographic and transactional data for all consumers   |
| Wealth Segment | sl1_wm.pwm_segment                   | Includes wealth segment details for PWM and non-PWM    |

### 2.2 Population and Target Definition

#### 2.2.1 Population Selection
We identify the target population by selecting non-PWM clients from the consumer base. Clients without PWM relationships in a defined lookback period are considered potential prospects.

#### 2.2.2 Target Definition
The goal is to predict which clients will convert to PWM based on similarity to existing PWM clients. Each consumer is scored based on their distance to a cluster center, with those closer to a center considered more likely to convert.

### 2.3 Feature Engineering

#### Sparse and Dense Features
- **Sparse Features:** Categorical features like state, zip code, and product types.
- **Dense Features:** Numeric features, including balances, transaction amounts, and account longevity.

Both types of features undergo standardization and encoding to prepare them for modeling.

### 2.4 Model Methodology



### 2.3 Model Development

#### 2.3.1 Methodology

The Private Wealth Management (PWM) prospecting system employs a data-driven approach using clustering and similarity scoring to identify high-potential prospects for PWM services. The key steps in the methodology include feature engineering, clustering, and cosine similarity calculations.

**1. Data Preprocessing and Feature Engineering:**
The system processes transaction and demographic data from the `dm_r3.pwm_mstr_dtl_daily` and `sb_dsp.pwm_customer_segmentation_final` tables. The **FeatureEngineeringPipeline** class handles the transformation and creation of features. Key features generated include:

- **Household longevity**: Number of days a household has been active.
- **Balance statistics**: Metrics such as current balance (`curr_bal_amt`), ledger balance (`ledger_bal_amt`), and derived statistics (mean, max, min, std deviation) over different time periods.
- **Product diversity**: Number of distinct products a household has engaged with.
- **Geographic features**: State-level data capturing a household’s presence across states.
- **Recent product activity**: Counts of products opened in the past 30, 90, 180, and 365 days.

Each feature is normalized to ensure they have zero mean and unit variance. This enables the model to handle different scales of features efficiently and prevents any single feature from dominating the clustering process.

**2. Clustering using K-Means:**
Once features are engineered, **K-Means clustering** is applied to segment existing PWM clients. The clustering model identifies **k** distinct groups based on household behavior, product holdings, and financial activity. Each cluster represents a different segment of PWM clients, capturing a variety of characteristics such as high-balance holders, diversified product users, or geographically spread clients.

The pipeline uses a vector assembler and standard scaler to combine and scale the feature set before passing it to the K-Means model. The centroids (cluster centers) produced by the K-Means algorithm represent the 'average' profile of each cluster, which is then used to calculate similarities between PWM clients and prospects.

**3. Calculating Similarity Scores:**
For prospective clients, the cosine similarity between their feature vectors and the cluster centroids is computed. This similarity score measures how closely a prospect matches the profile of each PWM cluster. Prospective clients are ranked based on their similarity to the nearest cluster.

The system cross-joins prospective clients (filtered to exclude existing PWM clients) with the pre-computed cluster centroids and calculates similarity using the following formula:

\[
\text{Cosine Similarity} = \frac{A \cdot B}{||A|| \times ||B||}
\]

where \(A\) is the feature vector of a prospect and \(B\) is the centroid of a cluster. The prospect with the highest similarity score is most likely to convert into a PWM client.

**4. Evaluation:**
The performance of the model is evaluated by comparing the system’s recommendations to actual client conversion data over a defined evaluation period. Prospective clients recommended by the system are checked against a validation dataset to measure recall — the percentage of actual PWM conversions captured by the model’s top-N prospects.

**Precision and recall metrics** are computed based on true positives (correctly identified prospects), false positives (incorrectly identified), and false negatives (missed PWM prospects). This evaluation ensures that the model is both identifying high-potential clients effectively and minimizing errors.

---

This section describes the **methodology** from preprocessing to evaluation. Let me know if you would like any adjustments before moving to the next section or if there’s anything more specific you would like me to include.
#### Hyperparameters:
- **Number of Clusters (K):** Determined via grid search to balance model accuracy with interpretability.
- **Scaler:** StandardScaler is used to normalize continuous features.

### 2.5 Outcome Analysis
The output includes a list of ranked prospects, each with a distance to the nearest cluster center and reason codes explaining their likelihood to convert. The model's recall (percentage of correct conversions identified) is tracked, with the current recall standing at 72% for affluent prospects and 78% for high-net-worth prospects.

### 3. Model Implementation


### Model Implementation

The prospecting system for identifying high-potential clients for Private Wealth Management (PWM) services involves various stages, from feature engineering to model development and clustering. This section outlines the implementation details for deploying the model, including configuration, postprocessing, and insights generation. The focus is on enabling efficient integration into production environments, supporting ongoing maintenance, and ensuring optimal use by business teams.

---

### 3.1 Model Config

The model configuration defines key parameters, paths, and data sources used throughout the process, including feature extraction, model training, and postprocessing. The configuration is managed through a YAML file (`config.yaml`), which is structured as follows:

**Key elements of the configuration:**

- **Feature Names:**
  - A list of features used in the model. These features include household-level characteristics such as balance statistics, product diversity, geographic information, and recent account activities.
  - Example features: `hh_longevity`, `curr_bal_amt`, `balance_trend`, `product_diversity`, `recent_opened_counts_30d`, and various product-type one-hot encoded features.

- **Dates:**
  - Defines the reference date for model execution, such as `model_reference_dt`, which indicates the cutoff date for using data to train or validate the model.

- **Paths:**
  - Defines file paths for external resources like the product mapping file, which is used to standardize product names during feature engineering. For example, the path to the product list file is set as `/home/cdsw/Product List.xlsx`.

---

### 3.2 Postprocess and Insights

Once the model has been trained and the clustering is complete, postprocessing steps are implemented to generate insights and prepare the model outputs for business use. These outputs include prospect lists and detailed feature comparisons between prospects and existing PWM clients.

#### 3.2.1 Postprocessing Steps

1. **Prospects Selection:**
   - After performing K-Means clustering on existing PWM clients, we calculate cosine similarity between each prospect (non-PWM client) and the cluster centers.
   - The similarity score is used to rank prospects based on how closely they resemble the profiles of the clusters formed from PWM clients.
   - The top **n** prospects are selected for further analysis. This list of prospects represents individuals or households with the highest likelihood of converting to PWM clients based on their similarity to current PWM households.

2. **Feature Enrichment:**
   - Each prospect is enriched with additional household-level insights generated from the feature engineering pipeline. These include financial metrics (e.g., balances, transaction trends), product diversity, and geographic distribution. This enables the business team to view a comprehensive profile of each potential client.

3. **Reason Codes:**
   - In addition to identifying prospects, the system provides reason codes that explain why a particular household was flagged as a high-potential PWM prospect. These reason codes are derived from the distance to the closest cluster center and insights based on specific features like account longevity or product usage.

4. **Model Outputs:**
   - The model outputs include the following:
     - A list of prospects ranked by similarity to PWM clusters.
     - Cluster assignment for each prospect.
     - Key household features and reason codes for each prospect.
     - Evaluation metrics such as precision, recall, and similarity scores, which can be used to assess the model’s performance.

---

### 3.3 Insights Generation

The insights generated by the model are crucial for understanding and explaining why a certain client is identified as a potential prospect. These insights are presented to the business team to guide their outreach strategies.

#### 3.3.1 Household Profile Insights

- **Longevity:**
  - The system calculates how long a household has been holding products with the bank. Longevity is an important indicator of engagement and client history.

- **Product Diversity:**
  - The diversity of products held by a household (e.g., checking accounts, investments, loans) is calculated. Households with diverse product portfolios are typically more engaged and may represent high potential for PWM services.

- **Recent Account Openings:**
  - The system tracks how many accounts a household has opened in the last 30, 90, 180, and 365 days. This provides insight into recent activity levels, which can be indicative of growth potential or evolving financial needs.

- **Financial Trends:**
  - Balances and transaction trends are analyzed over time to identify growth patterns. For example, increasing balances may indicate that the household is accumulating wealth, making them a good candidate for PWM services.

#### 3.3.2 Cluster-Level Insights

- **Cluster Centers:**
  - The model generates a set of cluster centers that represent typical PWM clients. Each center captures the average characteristics of a group of PWM clients based on their financial behavior, product usage, and other features.
  
- **Cluster Assignment:**
  - Prospects are assigned to the closest cluster based on their similarity to existing PWM clients. This allows the system to provide context on why a prospect was selected and how they compare to current PWM clients in terms of financial metrics and product engagement.

#### 3.3.3 Business Feedback

- The model is designed to accommodate feedback from the business team. Business users can provide input on the types of features they want to see in the final prospect list (e.g., specific financial metrics, geographic focus). These insights are then incorporated into the model for ongoing optimization.

### 5. Governance

Effective governance ensures that the PWM prospecting system operates within established business and regulatory standards while maintaining high performance and reliability. This section outlines the monitoring, threshold-setting, model drift tracking, and internal/external guidelines that govern the system’s lifecycle.

#### 5.1 Monitoring Threshold and Escalation Plan for Model Effectiveness

To ensure that the prospecting model continues to meet performance expectations, a monitoring plan is put in place. This plan includes regular checks on key performance indicators (KPIs) and model accuracy, precision, and recall. These metrics are monitored daily, and thresholds are established to trigger alerts if performance drops below predefined benchmarks.

**Key KPIs include:**
- **Precision and Recall:** Monitored through regular evaluation against validation data. A threshold for both metrics is set (e.g., precision > 0.75, recall > 0.65).
- **Model Stability:** Stability metrics, such as variance in similarity scores across validation periods, are monitored to ensure consistent performance.
- **Data Quality Checks:** The data feeding into the model is verified for accuracy, completeness, and timeliness. If the incoming data does not meet quality standards, an alert is triggered, and a review is initiated.
- **Escalation Plan:** If the model’s performance falls below the thresholds, the system will automatically notify the data science team and the business stakeholders. Escalation steps include:
  1. **Immediate Review:** The issue is reviewed by the data science team to determine if it is a data quality issue or model drift.
  2. **Model Retraining:** If model drift is detected, retraining is initiated using updated data. Business stakeholders are informed throughout the process.
  3. **Stakeholder Meeting:** If performance issues persist, a cross-functional team meeting is convened to discuss next steps and any potential modifications to the model or data pipeline.

#### 5.2 Model Drift Monitoring

Model drift occurs when the statistical properties of the input data change over time, leading to a decline in model performance. The system is equipped with mechanisms to detect and respond to model drift:

- **Continuous Monitoring:** The system continuously tracks model performance by comparing predictions against actual client conversion data. Deviations in predictions signal potential drift.
- **Drift Detection Metrics:**
  - **Data Drift:** Changes in the distribution of the feature inputs are monitored. For example, significant shifts in client account balances or product usage may indicate data drift.
  - **Performance Drift:** Changes in the model’s precision, recall, or other performance metrics trigger drift alerts. Regular backtesting with holdout data helps identify these shifts early.
- **Retraining Pipeline:** The system includes an automated pipeline for retraining the model when drift is detected. Retraining occurs on a scheduled basis (e.g., quarterly), but can also be initiated manually if drift is detected earlier.
  
#### 5.3 Regulatory and Internal Guidance

The prospecting model follows both internal governance standards and external regulatory guidelines to ensure compliance:

- **Data Privacy Compliance:** The model complies with all internal privacy regulations, including GDPR and CCPA, to protect client data. No personally identifiable information (PII) is used inappropriately, and access to sensitive data is restricted based on user roles.
- **Internal Audits:** Regular internal audits ensure that the model adheres to business requirements and ethical guidelines. This includes reviews of the data pipeline, feature engineering, and the prospecting results.
- **External Regulatory Reviews:** The model undergoes periodic review by regulatory bodies or third-party consultants, especially when using consumer financial data to generate insights. These reviews ensure the model is operating within the bounds of financial service regulations.

---

### 6. Controls

This chapter outlines the control mechanisms in place to ensure the model is updated, deployed, and modified responsibly. Controls are in place to manage changes, ensure accountability, and provide transparency across the model lifecycle.

#### 6.1 Change Controls

To ensure model reliability, any modifications to the code, data sources, or pipeline undergo a stringent change control process. This process is designed to minimize risks associated with changes, such as reduced model performance or unanticipated side effects.

- **Change Authorization:** All changes to the model, whether minor (e.g., feature updates) or major (e.g., algorithm changes), must be authorized by the data science team lead and the business stakeholders.
- **Version Control:** The entire codebase for the prospecting model is maintained in a Git repository. Each change is versioned, and detailed commit messages are mandatory for tracking the reason behind changes. A robust branching strategy is employed to segregate development, testing, and production environments.
  - **Versioning Documentation:** All versions are documented with metadata including version number, change descriptions, approval authority, and the deployment date.
  - **Rollback Procedures:** In the event that a change negatively impacts model performance, rollback procedures allow the team to revert to a previous, stable version.

#### 6.2 Code Repository and Model Artifacts

- **Code Repository (Git):** All source code is stored in a secure Git repository. Access to the repository is controlled by user roles to ensure that only authorized personnel can make changes to the production pipeline.
- **Model Artifacts:** Trained model objects, along with feature transformation objects (e.g., scalers, encoders), are stored in the data lake. These artifacts are versioned and saved with their associated metadata, including training datasets and hyperparameters used for model development.

#### 6.3 Data and Model Governance

- **Data Governance:** All datasets used for training and scoring are subject to strict governance protocols, ensuring that data quality, privacy, and integrity are maintained. Access to the datasets is controlled via user roles, and logs are maintained to track data access and modifications.
- **Model Governance:** Model configurations, training scripts, and performance metrics are logged for transparency. Regular reviews are conducted by a cross-functional team to ensure compliance with business needs and legal standards.
  
#### 6.4 Monitoring and Alerting

The prospecting system is equipped with automated monitoring and alerting mechanisms to ensure smooth operation:

- **Real-time Monitoring:** The system continuously monitors the status of jobs (data ingestion, feature engineering, model training, scoring) and alerts the team in case of failures or anomalies.
- **Alerting:** Alerts are triggered when thresholds are breached (e.g., data delays, model performance degradation), and notifications are sent via email or through the internal collaboration platform. Escalation procedures ensure prompt action.

---

These governance and control mechanisms are essential to maintaining the integrity and performance of the prospecting model. The system is designed to operate within stringent business and regulatory frameworks while continuously adapting to evolving data and business needs.
